// üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ü–ê–¢–ß –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ù–ê–í–ò–ì–ê–¶–ò–ò –í–ü–ï–†–ï–î
// –í—Å—Ç–∞–≤–∏—Ç—å –≤ browser console –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

if (window.pianoKeyboard) {
    // –ó–∞–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥ findNoteInPitchMap –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    window.pianoKeyboard.findNoteInPitchMap = function(currentTime, direction) {
        // –§–ò–õ–¨–¢–†–£–ï–ú –¢–û–õ–¨–ö–û –ö–ê–ß–ï–°–¢–í–ï–ù–ù–´–ï –û–°–ù–û–í–ù–´–ï –ù–û–¢–´
        const notes = this.pitchMap.notes.filter(note => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –Ω–æ—Ç—ã
            if (!note.maxClarity || note.maxClarity < 0.6) {return false;}
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–∏—Å–∫–ª—é—á–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–µ –ø–æ–¥—ä–µ–∑–¥—ã)
            if (note.duration && note.duration < 0.15) {return false;}
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
            if (note.detectionCount && note.detectionCount < 3) {return false;}
            
            return true; // –≠—Ç–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –Ω–æ—Ç–∞
        });
        
        console.log(`üîç –ü–ê–¢–ß: –ü–æ–∏—Å–∫ –Ω–æ—Ç—ã: –≤—Ä–µ–º—è=${currentTime.toFixed(2)}—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ=${direction === 1 ? '–≤–ø–µ—Ä–µ–¥' : '–Ω–∞–∑–∞–¥'}, –≤—Å–µ–≥–æ –Ω–æ—Ç=${this.pitchMap.notes.length}, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö=${notes.length}`);
        
        if (notes.length === 0) {
            console.warn('‚ö†Ô∏è –ü–ê–¢–ß: –ù–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–æ—Ç –≤ –∫–∞—Ä—Ç–µ');
            return null;
        }
        
        if (direction === 1) {
            // –í–ü–ï–†–ï–î - –∏—â–µ–º –ø–µ—Ä–≤—É—é –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –Ω–æ—Ç—É –ü–û–°–õ–ï —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            for (let i = 0; i < notes.length; i++) {
                if (notes[i].time > currentTime + 0.05) { // +0.05—Å –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
                    console.log(`‚û°Ô∏è –ü–ê–¢–ß: –ù–∞–π–¥–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –Ω–æ—Ç–∞: ${notes[i].keyId} –≤ ${notes[i].time.toFixed(2)}—Å (–∫–∞—á–µ—Å—Ç–≤–æ: ${(notes[i].maxClarity*100).toFixed(1)}%)`);
                    return notes[i];
                }
            }
            // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ - –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π
            const lastNote = notes[notes.length - 1];
            console.log(`üîö –ü–ê–¢–ß: –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü –∫–∞—Ä—Ç—ã, –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞: ${lastNote.keyId}`);
            return lastNote;
            
        } else {
            // –ù–ê–ó–ê–î - –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –Ω–æ—Ç—É –ü–ï–†–ï–î —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
            for (let i = notes.length - 1; i >= 0; i--) {
                if (notes[i].time < currentTime - 0.05) { // -0.05—Å –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
                    console.log(`‚¨ÖÔ∏è –ü–ê–¢–ß: –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –Ω–æ—Ç–∞: ${notes[i].keyId} –≤ ${notes[i].time.toFixed(2)}—Å (–∫–∞—á–µ—Å—Ç–≤–æ: ${(notes[i].maxClarity*100).toFixed(1)}%)`);
                    return notes[i];
                }
            }
            // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –Ω–∞—á–∞–ª–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π
            const firstNote = notes[0];
            console.log(`üîö –ü–ê–¢–ß: –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –Ω–∞—á–∞–ª–æ –∫–∞—Ä—Ç—ã, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫: ${firstNote.keyId}`);
            return firstNote;
        }
    };
    
    console.log('‚úÖ –ü–ê–¢–ß –ü–†–ò–ú–ï–ù–ï–ù: –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–ø–µ—Ä–µ–¥ —Ç–µ–ø–µ—Ä—å —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–æ—Ç—ã!');
    console.log('üß™ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å—Ç—Ä–µ–ª–æ—á–∫–∞–º–∏ - —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ');
} else {
    console.error('‚ùå pianoKeyboard –Ω–µ –Ω–∞–π–¥–µ–Ω - –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–Ω–∞—á–∞–ª–∞');
}

// –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ü–†–ò–ú–ï–ù–ï–ù–ò–Æ:
// 1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–µ—Å—å —ç—Ç–æ—Ç –∫–æ–¥
// 2. –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12)
// 3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Console
// 4. –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ –∏ –Ω–∞–∂–º–∏—Ç–µ Enter
// 5. –£–≤–∏–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü–ê–¢–ß –ü–†–ò–ú–ï–ù–ï–ù"
// 6. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å—Ç—Ä–µ–ª–æ—á–∫–∞–º–∏ 

// üîß –ü–ê–¢–ß –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ù–ê–í–ò–ì–ê–¶–ò–ò –í –†–ï–ñ–ò–ú–ï –ü–ê–£–ó–´
// –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫ piano-keyboard.js

// –ü–†–û–ë–õ–ï–ú–ê 1: –†–∞—Å—Ç—É—â–∏–π —Ç–∞–π–º–µ—Ä —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ—Ç
// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –≤ updateExistingNote (—Å—Ç—Ä–æ–∫–∞ 995-1003):

/*
–ó–ê–ú–ï–ù–ò–¢–¨:
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        noteData.lastDetection = timestamp;
        noteData.maxClarity = Math.max(noteData.maxClarity, clarity);
        noteData.maxAmplitude = Math.max(noteData.maxAmplitude, amplitude);
        noteData.detectionCount++;
        noteData.currentFrequency = frequency;

–ù–ê:
        // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–°–¢–£–©–ï–ì–û –¢–ê–ô–ú–ï–†–ê: –∑–∞—â–∏—Ç–∞ —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ—Ç
        if (!noteData.isSimulated && !noteData.fromPitchMap && !noteData.protectedFromCleanup) {
            // –û–±—ã—á–Ω–∞—è –Ω–æ—Ç–∞ - –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            noteData.lastDetection = timestamp;
            noteData.maxClarity = Math.max(noteData.maxClarity, clarity);
            noteData.maxAmplitude = Math.max(noteData.maxAmplitude, amplitude);
            noteData.detectionCount++;
            noteData.currentFrequency = frequency;
        } else {
            // –°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–æ—Ç–∞ - –ù–ï –ú–ï–ù–Ø–ï–ú startTime –∏ –ù–ï —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            console.log(`üéØ –°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–æ—Ç–∞ ${keyId} –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞`);
        }
*/

// –ü–†–û–ë–õ–ï–ú–ê 2: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–µ—Ç–∫–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –≤ —Ä–µ–∂–∏–º–µ –ø–∞—É–∑—ã
// –î–û–ë–ê–í–ò–¢–¨ –ø–µ—Ä–µ–¥ getCurrentTrackTime (—Å—Ç—Ä–æ–∫–∞ 1899):

function forceShowNotesInPauseMode(currentTime) {
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∏—Ç—á-–∫–∞—Ä—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ—Ç—ã –∏–∑ –Ω–µ—ë
    if (this.pitchMap && this.pitchMap.notes && this.pitchMap.notes.length > 0) {
        const tolerance = 0.1; // 100–º—Å —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Å—Ç—å
        const activeNote = this.pitchMap.notes.find(note => 
            Math.abs(note.time - currentTime) <= tolerance
        );
        
        if (activeNote) {
            console.log(`üéØ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ—Ç—É –∏–∑ –∫–∞—Ä—Ç—ã: ${activeNote.keyId} –Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ ${currentTime.toFixed(2)}—Å`);
            this.simulateNoteFromPitchMap(activeNote);
            return true;
        }
    }
    
    return false;
}

// –ü–†–û–ë–õ–ï–ú–ê 3: scrubByPitchMap –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç forceShowNotesInPauseMode
// –î–û–ë–ê–í–ò–¢–¨ –≤ –∫–æ–Ω–µ—Ü scrubByPitchMap (–ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ this.seekToTime(targetTime)):

/*
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ—Ç—ã –≤ —Ä–µ–∂–∏–º–µ –ø–∞—É–∑—ã
        setTimeout(() => {
            const newCurrentTime = this.getCurrentTrackTime();
            this.forceShowNotesInPauseMode(newCurrentTime);
        }, 50);
*/

console.log('üîß –ü–∞—Ç—á –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é'); 