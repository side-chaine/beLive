// üéØ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ù–ê–í–ò–ì–ê–¶–ò–ò –ü–û –ù–û–¢–ê–ú
// –ó–∞–º–µ–Ω–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã –≤ piano-keyboard.js

// üó∫Ô∏è –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ó–ê–ü–ò–°–¨ –í –ü–ò–¢–ß-–ö–ê–†–¢–£ (–∏—Å–∫–ª—é—á–∞–µ—Ç –ø–æ–¥—ä–µ–∑–¥—ã)
recordToPitchMapFixed(keyId, pitchData) {
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—Ä–µ–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è (–Ω–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑)
    if (!this.isTrackPlaying() || pitchData.isStatic) return;
    
    const currentTime = this.getCurrentTrackTime();
    if (currentTime < 0) return; // –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è
    
    const { frequency, clarity } = pitchData;
    
    // üö´ –§–ò–õ–¨–¢–†–ê–¶–ò–Ø –ü–û–î–™–ï–ó–î–û–í –ü–†–ò –ó–ê–ü–ò–°–ò –í –ö–ê–†–¢–£
    if (this.isGlideToNote && this.isGlideToNote(pitchData, keyId)) {
        console.log(`üö´ –ü–æ–¥—ä–µ–∑–¥ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω –≤ –∫–∞—Ä—Ç—É: ${keyId}`);
        return; // –ù–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–¥—ä–µ–∑–¥—ã –≤ –∫–∞—Ä—Ç—É
    }
    
    // üö´ –§–ò–õ–¨–¢–†–ê–¶–ò–Ø –ì–ê–†–ú–û–ù–ò–ß–ï–°–ö–ò–• –°–ö–ê–ß–ö–û–í
    if (this.isHarmonicJump && this.isHarmonicJump(frequency, this.currentActiveNote)) {
        console.log(`üö´ –ì–∞—Ä–º–æ–Ω–∏—á–µ—Å–∫–∏–π —Å–∫–∞—á–æ–∫ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω –≤ –∫–∞—Ä—Ç—É: ${keyId}`);
        return; // –ù–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≥–∞—Ä–º–æ–Ω–∏–∫–∏ –≤ –∫–∞—Ä—Ç—É
    }
    
    // üéØ –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ö–ê–ß–ï–°–¢–í–£ –î–õ–Ø –ó–ê–ü–ò–°–ò –í –ö–ê–†–¢–£
    if (clarity < 0.6) { // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —á–µ—Ç–∫–æ—Å—Ç—å
        console.log(`üö´ –ù–∏–∑–∫–∞—è —á–µ—Ç–∫–æ—Å—Ç—å –Ω–µ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –∫–∞—Ä—Ç—É: ${keyId} (${(clarity*100).toFixed(1)}%)`);
        return; // –ù–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–µ—Ç–æ—á–Ω—ã–µ –Ω–æ—Ç—ã
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤—É—é –Ω–æ—Ç—É –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é
    const lastNote = this.pitchMap.notes[this.pitchMap.notes.length - 1];
    
    if (lastNote && 
        lastNote.keyId === keyId && 
        (currentTime - lastNote.time) < 0.3) { // –£–º–µ–Ω—å—à–∏–ª –æ–∫–Ω–æ –¥–æ 0.3—Å –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –Ω–æ—Ç—É - –ø—Ä–æ–¥–ª–µ–≤–∞–µ–º –µ—ë
        lastNote.endTime = currentTime;
        lastNote.duration = lastNote.endTime - lastNote.time;
        lastNote.maxClarity = Math.max(lastNote.maxClarity || clarity, clarity);
        lastNote.detectionCount = (lastNote.detectionCount || 1) + 1;
        lastNote.isMainNote = true; // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω—É—é –Ω–æ—Ç—É
        
    } else {
        // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–æ—Ç—É
        if (lastNote && !lastNote.endTime) {
            lastNote.endTime = currentTime;
            lastNote.duration = lastNote.endTime - lastNote.time;
        }
        
        // üéØ –ü–†–û–í–ï–†–ö–ê –ù–ê –ú–ò–ù–ò–ú–ê–õ–¨–ù–£–Æ –î–õ–ò–¢–ï–õ–¨–ù–û–°–¢–¨
        const minDuration = 0.15; // –ú–∏–Ω–∏–º—É–º 150–º—Å –¥–ª—è –∑–∞–ø–∏—Å–∏
        if (lastNote && lastNote.duration > 0 && lastNote.duration < minDuration) {
            console.log(`üö´ –ö–æ—Ä–æ—Ç–∫–∞—è –Ω–æ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∫–∞—Ä—Ç—ã: ${lastNote.keyId} (${lastNote.duration.toFixed(2)}—Å)`);
            this.pitchMap.notes.pop(); // –£–¥–∞–ª—è–µ–º —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫—É—é –Ω–æ—Ç—É
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ –∫–∞—Ä—Ç–µ
        const noteRecord = {
            time: currentTime,
            endTime: null, // –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
            keyId: keyId,
            frequency: frequency,
            clarity: clarity,
            maxClarity: clarity,
            duration: 0, // –ë—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–æ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
            detectionCount: 1,
            isMainNote: true, // –§–ª–∞–≥ –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–æ—Ç—ã
            qualityScore: clarity, // –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–æ—Ç—ã
            source: 'detection' // –ò—Å—Ç–æ—á–Ω–∏–∫: –¥–µ—Ç–µ–∫—Ü–∏—è
        };
        
        this.pitchMap.notes.push(noteRecord);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
        const timeKey = Math.floor(currentTime * 10) / 10; // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 0.1—Å
        if (!this.pitchMap.timeIndex.has(timeKey)) {
            this.pitchMap.timeIndex.set(timeKey, []);
        }
        this.pitchMap.timeIndex.get(timeKey).push(this.pitchMap.notes.length - 1);
        
        console.log(`üó∫Ô∏è –ö–ê–ß–ï–°–¢–í–ï–ù–ù–ê–Ø –Ω–æ—Ç–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –∫–∞—Ä—Ç—É: ${keyId} –≤ ${currentTime.toFixed(2)}—Å (${frequency.toFixed(1)}Hz, –∫–∞—á–µ—Å—Ç–≤–æ: ${(clarity*100).toFixed(1)}%)`);
    }
    
    // –í–∫–ª—é—á–∞–µ–º –∑–∞–ø–∏—Å—å –µ—Å–ª–∏ –µ—â—ë –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞
    if (!this.pitchMap.isRecording) {
        this.pitchMap.isRecording = true;
        console.log('üó∫Ô∏è –ó–∞–ø–∏—Å—å –ß–ò–°–¢–û–ô –ø–∏—Ç—á-–∫–∞—Ä—Ç—ã –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê');
    }
}

// üéØ –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–´–ô –ü–û–ò–°–ö –ù–û–¢ –í –ö–ê–†–¢–ï
findNoteInPitchMapFixed(currentTime, direction) {
    const notes = this.pitchMap.notes.filter(note => note.isMainNote); // –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–æ—Ç—ã
    
    if (notes.length === 0) {
        console.warn('‚ö†Ô∏è –ù–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–æ—Ç –≤ –∫–∞—Ä—Ç–µ');
        return null;
    }
    
    console.log(`üîç –ü–æ–∏—Å–∫ –Ω–æ—Ç—ã: –≤—Ä–µ–º—è=${currentTime.toFixed(2)}—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ=${direction === 1 ? '–≤–ø–µ—Ä–µ–¥' : '–Ω–∞–∑–∞–¥'}, –Ω–æ—Ç –≤ –∫–∞—Ä—Ç–µ=${notes.length}`);
    
    if (direction === 1) {
        // –í–ü–ï–†–ï–î - –∏—â–µ–º –ø–µ—Ä–≤—É—é –æ—Å–Ω–æ–≤–Ω—É—é –Ω–æ—Ç—É –ü–û–°–õ–ï —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        for (let i = 0; i < notes.length; i++) {
            if (notes[i].time > currentTime + 0.05) { // +0.05—Å –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
                console.log(`‚û°Ô∏è –ù–∞–π–¥–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –Ω–æ—Ç–∞: ${notes[i].keyId} –≤ ${notes[i].time.toFixed(2)}—Å`);
                return notes[i];
            }
        }
        // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ - –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π
        const lastNote = notes[notes.length - 1];
        console.log(`üîö –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü –∫–∞—Ä—Ç—ã, –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞: ${lastNote.keyId}`);
        return lastNote;
        
    } else {
        // –ù–ê–ó–ê–î - –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—Å–Ω–æ–≤–Ω—É—é –Ω–æ—Ç—É –ü–ï–†–ï–î —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
        for (let i = notes.length - 1; i >= 0; i--) {
            if (notes[i].time < currentTime - 0.05) { // -0.05—Å –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
                console.log(`‚¨ÖÔ∏è –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –Ω–æ—Ç–∞: ${notes[i].keyId} –≤ ${notes[i].time.toFixed(2)}—Å`);
                return notes[i];
            }
        }
        // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –Ω–∞—á–∞–ª–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–π
        const firstNote = notes[0];
        console.log(`üîö –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –Ω–∞—á–∞–ª–æ –∫–∞—Ä—Ç—ã, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫: ${firstNote.keyId}`);
        return firstNote;
    }
}

// üéØ –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –ö–ê–†–¢–ê–ú –° –°–ò–ú–ú–ï–¢–†–ò–ß–ù–û–ô –õ–û–ì–ò–ö–û–ô
scrubByPitchMapFixed(direction) {
    console.log(`üéµ –¢–û–ß–ù–ê–Ø –ø–µ—Ä–µ–º–æ—Ç–∫–∞ –ø–æ –ø–∏—Ç—á-–∫–∞—Ä—Ç–µ: ${direction === -1 ? '–ø—Ä–µ–¥—ã–¥—É—â–∞—è' : '—Å–ª–µ–¥—É—é—â–∞—è'} –Ω–æ—Ç–∞`);
    
    const currentTime = this.getCurrentTrackTime();
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫—É –≤–æ –≤—Ä–µ–º—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –Ω–æ—Ç–∞–º
    this.scrubSystem.isScrubbing = true;
    this.scrubSystem.navigationMode = true;
    
    // üó∫Ô∏è –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –û–ß–ò–©–ï–ù–ù–û–ô –ö–ê–†–¢–ï –ù–û–¢
    if (this.pitchMap.notes.length === 0) {
        console.warn('‚ö†Ô∏è –ü–∏—Ç—á-–∫–∞—Ä—Ç–∞ –ø—É—Å—Ç–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—É—é –ø–µ—Ä–µ–º–æ—Ç–∫—É');
        this.scrubByTime(direction);
        return;
    }
    
    // –ò—â–µ–º –±–ª–∏–∂–∞–π—à—É—é –ö–ê–ß–ï–°–¢–í–ï–ù–ù–£–Æ –Ω–æ—Ç—É –≤ –∫–∞—Ä—Ç–µ
    const targetNote = this.findNoteInPitchMapFixed(currentTime, direction);
    
    if (targetNote) {
        // –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –∫ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –Ω–æ—Ç–µ
        const targetTime = targetNote.time;
        console.log(`üéØ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ö–ê–ß–ï–°–¢–í–ï–ù–ù–û–ô –Ω–æ—Ç–µ: ${targetNote.keyId} –≤ ${targetTime.toFixed(2)}—Å (–∫–∞—á–µ—Å—Ç–≤–æ: ${(targetNote.maxClarity*100).toFixed(1)}%)`);
        
        this.seekToTime(targetTime);
        
        // üéµ –°–ò–ú–£–õ–ò–†–£–ï–ú –î–ï–¢–ï–ö–¶–ò–Æ –î–õ–Ø –ü–û–î–°–í–ï–¢–ö–ò
        setTimeout(() => {
            this.simulateNoteFromPitchMapFixed(targetNote);
        }, 100); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ–º–æ—Ç–∫–∏
        
    } else {
        console.warn('‚ö†Ô∏è –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –Ω–æ—Ç–∞ –≤ –∫–∞—Ä—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–æ—Ç–∫—É');
        // Fallback –Ω–∞ –æ–±—ã—á–Ω—É—é –ø–µ—Ä–µ–º–æ—Ç–∫—É
        const step = direction === 1 ? 0.5 : -0.5;
        const targetTime = Math.max(0, currentTime + step);
        this.seekToTime(targetTime);
    }
}

// üé≠ –£–õ–£–ß–®–ï–ù–ù–ê–Ø –°–ò–ú–£–õ–Ø–¶–ò–Ø –ù–û–¢–´ –ò–ó –ü–ò–¢–ß-–ö–ê–†–¢–´
simulateNoteFromPitchMapFixed(noteRecord) {
    console.log(`üé≠ –°–∏–º—É–ª—è—Ü–∏—è –ö–ê–ß–ï–°–¢–í–ï–ù–ù–û–ô –Ω–æ—Ç—ã: ${noteRecord.keyId} (${noteRecord.frequency.toFixed(1)}Hz, –∫–∞—á–µ—Å—Ç–≤–æ: ${(noteRecord.maxClarity*100).toFixed(1)}%)`);
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –Ω–æ—Ç—ã
    this.forceStopAllKeys('map_simulation');
    
    // –°–æ–∑–¥–∞–µ–º "–≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é" –Ω–æ—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –≤—ã—Å–æ–∫–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º
    const simulatedPitchData = {
        frequency: noteRecord.frequency,
        clarity: noteRecord.maxClarity || 0.8,
        amplitude: 0.4, // –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –∞–º–ø–ª–∏—Ç—É–¥–∞ –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏
        timestamp: performance.now(),
        isSimulated: true, // –§–ª–∞–≥ —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–æ—Ç—ã
        isMainNote: true, // –§–ª–∞–≥ –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–æ—Ç—ã
        fromCleanMap: true // –§–ª–∞–≥ —á—Ç–æ –∏–∑ –æ—á–∏—â–µ–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã
    };
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞–∫ –æ–±—ã—á–Ω—É—é –Ω–æ—Ç—É
    this.startNewNote(noteRecord.keyId, simulatedPitchData);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–æ—Ç—ã
    if (this.currentActiveNote) {
        this.currentActiveNote.isSimulated = true;
        this.currentActiveNote.fromPitchMap = true;
        this.currentActiveNote.isMainNote = true;
        this.currentActiveNote.originalTime = noteRecord.time;
        this.currentActiveNote.originalDuration = noteRecord.duration;
        this.currentActiveNote.qualityScore = noteRecord.maxClarity;
        this.currentActiveNote.protectedFromCleanup = true; // –ó–ê–©–ò–¢–ê –û–¢ –ê–í–¢–û–û–ß–ò–°–¢–ö–ò
        
        console.log(`üõ°Ô∏è –°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–æ—Ç–∞ ${noteRecord.keyId} –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏`);
    }
    
    console.log(`‚ú® –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–æ—Ç–∞ ${noteRecord.keyId} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏`);
}

// üßπ –û–ß–ò–°–¢–ö–ê –ö–ê–†–¢–´ –û–¢ –ê–†–¢–ï–§–ê–ö–¢–û–í (–≤—ã–∑—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏)
cleanupPitchMap() {
    if (this.pitchMap.notes.length === 0) return;
    
    console.log(`üßπ –û—á–∏—Å—Ç–∫–∞ –ø–∏—Ç—á-–∫–∞—Ä—Ç—ã: –±—ã–ª–æ ${this.pitchMap.notes.length} –Ω–æ—Ç`);
    
    const cleanNotes = [];
    const minDuration = 0.1; // –ú–∏–Ω–∏–º—É–º 100–º—Å
    const minClarity = 0.5; // –ú–∏–Ω–∏–º—É–º 50% —á–µ—Ç–∫–æ—Å—Ç–∏
    
    for (const note of this.pitchMap.notes) {
        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        if (note.duration >= minDuration && 
            note.maxClarity >= minClarity && 
            note.isMainNote) {
            cleanNotes.push(note);
        } else {
            console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –Ω–æ—Ç–∞: ${note.keyId} (${note.duration?.toFixed(2)}—Å, ${(note.maxClarity*100).toFixed(1)}%)`);
        }
    }
    
    this.pitchMap.notes = cleanNotes;
    console.log(`‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –æ—Å—Ç–∞–ª–æ—Å—å ${cleanNotes.length} –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–æ—Ç`);
    
    // –ü–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å
    this.pitchMap.timeIndex.clear();
    cleanNotes.forEach((note, index) => {
        const timeKey = Math.floor(note.time * 10) / 10;
        if (!this.pitchMap.timeIndex.has(timeKey)) {
            this.pitchMap.timeIndex.set(timeKey, []);
        }
        this.pitchMap.timeIndex.get(timeKey).push(index);
    });
}

// –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–†–ò–ú–ï–ù–ï–ù–ò–Æ:
// 1. –ó–∞–º–µ–Ω–∏—Ç–µ recordToPitchMap –Ω–∞ recordToPitchMapFixed
// 2. –ó–∞–º–µ–Ω–∏—Ç–µ findNoteInPitchMap –Ω–∞ findNoteInPitchMapFixed  
// 3. –ó–∞–º–µ–Ω–∏—Ç–µ scrubByPitchMap –Ω–∞ scrubByPitchMapFixed
// 4. –ó–∞–º–µ–Ω–∏—Ç–µ simulateNoteFromPitchMap –Ω–∞ simulateNoteFromPitchMapFixed
// 5. –î–æ–±–∞–≤—å—Ç–µ –≤—ã–∑–æ–≤ cleanupPitchMap() –ø—Ä–∏ –ø–∞—É–∑–µ —Ç—Ä–µ–∫–∞ 