updateExistingNote(keyId, pitchData) {
    const { frequency, clarity, amplitude, timestamp } = pitchData;
    const noteData = this.activeNotes.get(keyId);
    
    if (!noteData) return;
    
    // –ó–ê–©–ò–¢–ê –°–ò–ú–£–õ–ò–†–û–í–ê–ù–ù–´–• –ù–û–¢: –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ—Ç
    if (noteData.isSimulated || noteData.fromPitchMap || noteData.protectedFromCleanup) {
        console.log(`üõ°Ô∏è –°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–æ—Ç–∞ ${keyId} –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞`);
        return;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    noteData.lastDetection = timestamp;
    noteData.maxClarity = Math.max(noteData.maxClarity, clarity);
    noteData.maxAmplitude = Math.max(noteData.maxAmplitude, amplitude);
    noteData.detectionCount++;
    noteData.currentFrequency = frequency;
    
    // –ö–∞–∂–¥—ã–µ 10 –¥–µ—Ç–µ–∫—Ü–∏–π –ª–æ–≥–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (noteData.detectionCount % 10 === 0) {
        const duration = timestamp - noteData.startTime;
        console.log(`üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï ${keyId}: ${duration.toFixed(0)}–º—Å, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${noteData.detectionCount}, —Ç–æ—á–Ω–æ—Å—Ç—å: ${(clarity*100).toFixed(1)}%`);
    }
} 